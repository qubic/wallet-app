name: 📦 APK to Firebase Release

on:
  workflow_call:
    secrets:
      ANDROID_KEYSTORE_BASE64:
        required: true
      KEYSTORE_PASSWORD:
        required: true
      KEY_PASSWORD:
        required: true
      KEY_ALIAS:
        required: true
      FIREBASE_SERVICE_ACCOUNT_JSON:
        required: true
      FIREBASE_APP_ID:
        required: true

permissions:
  contents: write

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📶 Set up Flutter
        uses: ./.github/actions/setup-flutter

      - name: 📅 Cache Flutter pub packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: 📦 Install Flutter dependencies
        run: flutter pub get

      - name: 🔐 Decode keystore
        run: echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/ci-release-key.keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: ✅ Confirm keystore file exists
        run: ls -l android/app/ci-release-key.keystore

      - name: 🧮 Bump versionCode
        id: bump_version
        run: |
          VERSION_NAME=$(grep version: pubspec.yaml | awk '{print $2}')
          VERSION_CODE=$(grep versionCode android/app/build.gradle | awk '{print $2}')
          echo "Current version: $VERSION_NAME+$VERSION_CODE"

          NEW_CODE=$((VERSION_CODE + 1))

          # Update versionCode
          sed -i "s/versionCode $VERSION_CODE/versionCode $NEW_CODE/" android/app/build.gradle

          # Commit and push
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add android/app/build.gradle
          git commit -m "⬆️ Bump versionCode to $NEW_CODE for $VERSION_NAME"
          git tag "Android_v$VERSION_NAME+$NEW_CODE"

          echo "VERSION_TAG=v$VERSION_NAME+$NEW_CODE" >> $GITHUB_ENV

      - name: 🏗️ Build Universal Release APK
        run: flutter build apk --release
        env:
          CI: true
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: 📁 Install Firebase CLI
        run: npm install -g firebase-tools

      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}"

      - name: 🚀 Upload APK to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "Internal"

      - name: 📤 Push tag to GitHub
        run: git push origin ${{ env.VERSION_TAG }}
